{"version":3,"sources":["components/Country/Country.js","components/CountryList/CountryList.js","components/SearchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Country","stats","className","src","CountryCode","alt","Countr2","Active","Confirmed","Deaths","Recovered","CountryList","map","country","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","countries","a","fetch","resp","json","this","forEach","Slug","data","length","prevState","concat","ISO2","filteredCountries","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oWAmBeA,EAhBC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAKC,IAAG,sCAAkCF,EAAMG,YAAxC,gBAAoEC,IAAKJ,EAAMK,UACvF,6BAAML,EAAMD,UACZ,sBAAKE,UAAU,WAAf,UACI,+CAAkBD,EAAMM,UACxB,kDAAqBN,EAAMO,aAC3B,+CAAkBP,EAAMQ,UACxB,kDAAqBR,EAAMS,oBCA5BC,EARK,SAAC,GAAe,IAAbV,EAAY,EAAZA,MACnB,OACI,qBAAKC,UAAU,cAAf,SACMD,EAAMW,KAAI,SAACC,GAAD,OAAa,cAAC,EAAD,CAASZ,MAASY,GAAgBA,EAAQT,mBCGhEU,G,MAPG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC9B,OAEI,uBAAOC,KAAK,SAASf,UAAU,SAASa,YAAcA,EAAaG,SAAWF,MC4DvEG,E,kDA1Db,aAAe,IAAD,8BACZ,gBA4BFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SA3BtC,EAAKC,MAAQ,CACXC,UAAW,GACXzB,MAAO,GACPqB,YAAa,IANH,E,4FAUd,qCAAAK,EAAA,sEACqBC,MAAM,wCAD3B,cACQC,EADR,gBAE0BA,EAAKC,OAF/B,OAEQJ,EAFR,OAIEK,KAAKV,SAAS,CAAEK,cAEhBK,KAAKN,MAAMC,UAAUM,QAArB,uCAA6B,WAAMnB,GAAN,iBAAAc,EAAA,sEACRC,MAAM,4CAAD,OAA6Cf,EAAQoB,OADlD,cACrBJ,EADqB,gBAERA,EAAKC,OAFG,QAErBI,EAFqB,QAIlBC,QACP,EAAKd,UAAS,SAAAe,GAAS,MACrB,CAAEnC,MAAOmC,EAAUnC,MAAMoC,OAAhB,2BAA2BH,EAAKA,EAAKC,OAAS,IAA9C,IAAkD/B,YAAaS,EAAQyB,YANzD,2CAA7B,kCAAAP,KAAA,gBANF,gD,0EAuBA,WAEE,MAA+BA,KAAKN,MAA5BxB,EAAR,EAAQA,MAAOqB,EAAf,EAAeA,YACTiB,EAAoBtC,EAAMuC,QAAO,SAAA3B,GAAO,OAC5CA,EAAQb,QAAQyC,cAAcC,SAASpB,EAAYmB,kBAIrD,OACE,sBAAKvC,UAAU,MAAf,UAEE,uDAEA,cAAC,EAAD,CAAWa,YAAY,iIAAwBC,aAAee,KAAKf,eAEnE,cAAC,EAAD,CAAaf,MAAQsC,W,GAlDXI,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ab1ae470.chunk.js","sourcesContent":["import React from 'react';\nimport './Country.css';\n\nconst Country = ({ stats }) => {\n    return (\n        <div className='country'>\n            <img src={`https://www.countryflags.io/${ stats.CountryCode }/flat/64.png`} alt={stats.Countr2}/>\n            <h2>{ stats.Country }</h2>\n            <div className=\"describe\">\n                <p>{ `Active : ${ stats.Active }` }</p>\n                <p>{ `Confirmed : ${ stats.Confirmed }` }</p>\n                <p>{ `Deaths : ${ stats.Deaths }` }</p>\n                <p>{ `Recovered : ${ stats.Recovered }` }</p>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Country;","import React from 'react';\nimport './CountryList.css'\nimport Country from '../Country/Country';\n\nconst CountryList = ({ stats }) => {\n    return (\n        <div className='countrylist'>\n            { stats.map((country) => <Country stats={ (country)} key={ country.CountryCode}/>)}\n        </div>\n    );\n}\n\nexport default CountryList;","import React from 'react';\nimport './Searchbox.css';\n\nconst SearchBox = ({ placeholder, handleChange }) => {\n    return (\n        \n        <input type='search' className='search' placeholder={ placeholder} onChange={ handleChange}/>\n    )\n}\n\nexport default SearchBox;","// import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport CountryList from './components/CountryList/CountryList';\nimport SearcbBox from './components/SearchBox/SearchBox';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      countries: [],\n      stats: [],\n      searchField: ''\n    }\n  }\n\n  async componentDidMount() {\n    const resp = await fetch('https://api.covid19api.com/countries');\n    const countries = await resp.json();\n\n    this.setState({ countries });\n\n    this.state.countries.forEach(async country => {\n      const resp = await fetch(`https://api.covid19api.com/total/country/${country.Slug}`);\n      const data = await resp.json();\n\n      if (data.length) {\n        this.setState(prevState => (\n          { stats: prevState.stats.concat({...data[data.length - 1], CountryCode: country.ISO2})}\n        ));\n      }\n    });\n    \n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n\n    const { stats, searchField } = this.state;\n    const filteredCountries = stats.filter(country => (\n      country.Country.toLowerCase().includes(searchField.toLowerCase())\n    ));\n\n\n    return (\n      <div className=\"App\">\n\n        <h1>Covid19 Stats Web App</h1>\n\n        <SearcbBox placeholder='ค้นหาประเทศที่ต้องการ' handleChange={ this.handleChange } />\n\n        <CountryList stats={ filteredCountries } />\n\n      </div>\n    )\n  }\n\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}